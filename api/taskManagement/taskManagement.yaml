# Tasks can be created by other flows!

openapi: '3.0.1'
info:
  title: "Asynchronous Task Management API"
  version: '1.0.0'

servers:
  - url: 'https://api.uvesolutions.com/tasks'

paths:
  /tasks/create:
    post:
      tags:
        - Task
      operationId: CreateTask
      summary: "Create a new task"
      description: Requests the creation of a new task and returns the new task unique Id.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Success, the Id of the new task created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: "Invalid input"

  /tasks/{id}:
    get:
      tags:
        - Task
      summary: Get task by ID
      description: Returns all the available details for the specified task corresponding to the given TaskId.
      operationId: GetTask
      parameters: 
      - name: id
        in: path
        description: "ID of the task to retrieve"
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: "Task not found"

  /tasks:
      get:
        tags:
          - Task
        summary: "Get a list of tasks with filters"
        description: Returns all matching tasks for the given filter.
        parameters:
          - name: created_before
            in: query
            description: "Target date for created before filter."
            example: '2023-01-13 12:34:56'
            required: false
            schema:
              type: string
              format: date-time
          - name: created_after
            in: query
            description: "Target date for created after filter."
            example: '2023-01-13 12:34:56'
            required: false
            schema:
              type: string
              format: date-time
          - name: status
            in: query
            description: "Comma separated case insensitive list of target statuses filter."
            example: 'processing,queued'
            required: false
            schema:
              type: string

        responses:
          '200':
            description: "Successful response"
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Task'

components:

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    
    TaskCreate:
      type: object
      required:
        - type
        - parameters
      properties:
        type:
          description: Name of the <b>type</b> of the new task to be created. Must be a valid task type name. 
          type: string
          example: 'CustomerSipOut'
        parameters:
          additionalProperties: true
          description: The object defining the parameters of the new task.
          type: object
          example: '{agent=1}'
        callback:
          description: > 
            The URL query string that will be launched via GET upon each state change. <br>
            Note that a '&task_id={taskId}&state={newstate}&download_url={download_url}' will be appendend to this string to make the callback request
          type: string
          example: 'https://customer.platform.cloud/callbacks/taskManagement?custom=1'

    Task:
      type: object
      properties:
        id:
          type: integer
        type:
          type: integer
        parameters:
          description: The object defining the parameters of the new task.
          type: integer
          example: '{agent=1}'
        status:
          description: Current status of the task. 
          type: string
          example: 'Processing'
        created_at:
          description: Timestamp of the task creation time. 
          type: string
          format: date-time
          example: '2023-01-13 12:34:56'
        callback:
          description: > 
            The URL query string that will be launched via GET upon each state change. <br>
            Note that a '&id={taskId}&state={newstate}' will be added to this string 
          type: string
          example: 'https://customer.platform.cloud/callbacks/taskManagement?custom=1'

      required:
        - id
        - status
        - created_at